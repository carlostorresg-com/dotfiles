#!/bin/env bash

# ~/.macos — https://github.com/kentcdodds/dotfiles/blob/master/.macos
# Modified by Carlos Torres
# Run without downloading:
# curl https://raw.githubusercontent.com/govea/dotfiles/master/.macos | bash

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

###############################################################################
# Carlos' Customizations                                                       #
###############################################################################

echo "Hello $(whoami)! Let's get you set up."

echo "installing homebrew"
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"

echo "adding homebrew to the path"
(echo; echo 'eval "$(/opt/homebrew/bin/brew shellenv)"') >> "${HOME}/.zprofile"
eval "$(/opt/homebrew/bin/brew shellenv)"         

echo "brew installing git"
brew install git

###############################################################################
# Dev folders and dotfiles                                                    #
###############################################################################
echo "mkdir -p ${HOME}/dev"
mkdir -p "${HOME}/dev"

echo "mkdir -p ${HOME}/dev/github"
mkdir -p "${HOME}/dev/github"

echo "cloning dotfiles"
git clone https://github.com/govea/dotfiles "${HOME}/dev/github/dotfiles"
ln -s "${HOME}/dev/github/dotfiles/.zshrc" "${HOME}/.zshrc"
ln -s "${HOME}/dev/github/dotfiles/.gitignore_global" "${HOME}/.gitignore_global"
ln -s "${HOME}/dev/github/dotfiles/.hyper.js" "${HOME}/.hyper.js"

###############################################################################
# Applications                                                                #
###############################################################################
echo "brew installing docker"
brew install docker

echo "installing node (via n-install)"
curl -L https://git.io/n-install | bash

echo "node --version: $(node --version)"
echo "npm --version: $(npm --version)"

echo "installing apps with brew cask"
brew install --cask alfred rectangle hyper insomnia visual-studio-code fork numi obsidian slack spotify zoom brave-browser postman rocket kap cron

echo "installing oh-my-zsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"


###############################################################################
# Dev Experience
###############################################################################
echo "installing fonts"
brew tap homebrew/cask-fonts
brew install --cask font-victor-mono
brew install --cask font-fira-mono-nerd-font
brew install --cask font-hack-nerd-font
brew install --cask font-inconsolata-nerd-font
brew install --cask font-roboto-mono-nerd-font
brew install --cask font-ubuntu-mono-nerd-font

###############################################################################
# Github: Allow this computer to read/write to my repos
###############################################################################
# echo "Generating a new SSH key for GitHub"
# ssh-keygen -t ed25519 -C "ctgovea+github@gmail.com" -f ~/.ssh/id_ed25519
# eval "$(ssh-agent -s)"
# touch ~/.ssh/config
# echo "Host *\n AddKeysToAgent yes\n UseKeychain yes\n IdentityFile ~/.ssh/id_ed25519" | tee ~/.ssh/config
# ssh-add -K ~/.ssh/id_ed25519
# echo "run 'pbcopy < ~/.ssh/id_ed25519.pub' and paste that into GitHub: https://github.com/settings/keys"

###############################################################################
# General UI/UX                                                               #
###############################################################################
echo "making system modifications:"

# Make Chrome Two finger swipe for back and forward
defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool TRUE

# Disable the sound effects on boot
sudo nvram SystemAudioVolume=" "

# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Save to disk (not to iCloud) by default
defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false

# Disable the “Are you sure you want to open this application?” dialog
defaults write com.apple.LaunchServices LSQuarantine -bool false

# Disable the crash reporter
defaults write com.apple.CrashReporter DialogType -string "none"

##############################################################################
Dock                                                                        #
##############################################################################

# Auto-hide the Dock
defaults write com.apple.Dock autohide-delay -float 0

# Automatically hide and show the Dock
defaults write com.apple.dock autohide -bool true

# Change minimize/maximize window effect
defaults write com.apple.dock mineffect -string "scale"

# Make Dock icons of hidden applications translucent
defaults write com.apple.Dock showhidden -bool YES

# Set the icon size of Dock items to 56 pixelse

# Wipe all (default) app icons from the Dock
# This is only really useful when setting up a new Mac, or if you don’t use
# the Dock to launch apps.
defaults write com.apple.dock persistent-apps -array


###############################################################################
# Photos                                                                      #
###############################################################################

# Prevent Photos from opening automatically when devices are plugged in
defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true


###############################################################################
# Finder                                                                        #
###############################################################################

# Finder: allow quitting via ⌘ + Q; doing so will also hide desktop icons
defaults write com.apple.finder QuitMenuItem -bool true

# Show hidden files
defaults write com.apple.finder AppleShowAllFiles -bool YES

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# When performing a search, search the current folder by default
defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Automatically open a new Finder window when a volume is mounted
defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

# Finder: show all filename extensions
defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
defaults write com.apple.finder ShowPathbar -bool true

# Disable the warning when changing a file extension
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Show the ~/Library folder
chflags nohidden ~/Library

# Change where screenshots are saved to
mkdir ~/Desktop/Screenshots
defaults write com.apple.screencapture location ~/Desktop/Screenshots

# Enable saving sreenshots as JPEG
defaults write com.apple.screencapture type JPG

###############################################################################
# Safari & WebKit                                                             #
###############################################################################

# Privacy: don’t send search queries to Apple
defaults write com.apple.Safari UniversalSearchEnabled -bool false
defaults write com.apple.Safari SuppressSearchSuggestions -bool true

# Prevent Safari from opening ‘safe’ files automatically after downloading
defaults write com.apple.Safari AutoOpenSafeDownloads -bool false


###############################################################################
# Activity Monitor                                                            #
###############################################################################

# Show the main window when launching Activity Monitor
defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

# Visualize CPU usage in the Activity Monitor Dock icon
# defaults write com.apple.ActivityMonitor IconType -int 5

# Show all processes in Activity Monitor
defaults write com.apple.ActivityMonitor ShowCategory -int 0

# Sort Activity Monitor results by CPU usage
defaults write com.apple.ActivityMonitor SortColumn -string "CPUUsage"
defaults write com.apple.ActivityMonitor SortDirection -int 0


###############################################################################
# Google Chrome & Google Chrome Canary                                        #
###############################################################################

# Disable the all too sensitive backswipe on trackpads
defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false
defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false

# Disable the all too sensitive backswipe on Magic Mouse
defaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false
defaults write com.google.Chrome.canary AppleEnableMouseSwipeNavigateWithScrolls -bool false


###############################################################################
# Kill affected applications                                                  #
###############################################################################

# for app in "Activity Monitor" \
# 	"Address Book" \
# 	"Calendar" \
# 	"cfprefsd" \
# 	"Contacts" \
# 	"Dock" \
# 	"Finder" \
# 	"Google Chrome Canary" \
# 	"Google Chrome" \
# 	"Mail" \
# 	"Messages" \
# 	"Opera" \
# 	"Photos" \
# 	"Safari" \
# 	"SizeUp" \
# 	"Spectacle" \
# 	"SystemUIServer" \
# 	"Terminal" \
# 	"Transmission" \
# 	"Tweetbot" \
# 	"Twitter" \
# 	"iCal"; do
# 	killall "${app}" &> /dev/null
# done

echo "Hey, remember to import your Rectangle shortcuts from RectangleConfig.json!"

echo "Done. Note that some of these changes require a logout/restart to take effect."
